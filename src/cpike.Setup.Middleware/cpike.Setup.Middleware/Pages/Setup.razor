@page "/setup"
@using cpike.Setup.Middleware.Components
@using cpike.Setup.Middleware.Services
@inject ISetupPasswordService PasswordService

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Setup Wizard</title>
    <base href="/" />
    <link rel="stylesheet" href="_content/cpike.Setup.Middleware/css/setup-wizard.css" />
</head>
<body>
    @if (_showPasswordPrompt)
    {
        <PasswordPrompt OnPasswordVerified="OnPasswordVerifiedAsync" />
    }
    else
    {
        <SetupWizard />
    }
</body>
</html>

@code {
    private bool _showPasswordPrompt = true;

    protected override async Task OnInitializedAsync()
    {
        // Check if password is required and verified
        var passwordRequired = await PasswordService.IsPasswordRequiredAsync();
        var passwordVerified = await PasswordService.IsPasswordVerifiedAsync();

        _showPasswordPrompt = passwordRequired && !passwordVerified;
    }

    private Task OnPasswordVerifiedAsync()
    {
        _showPasswordPrompt = false;
        StateHasChanged();
        return Task.CompletedTask;
    }
}
